generator client {
  provider = "prisma-client-js"
  output = "./generated"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  avatar      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  login       UserLogin @relation(fields: [id], references: [userId])
  chatsSent   Chat[]    @relation("SenderChats")
  chatsReceived Chat[]  @relation("ReceiverChats")
  messages    Message[]
  files       File[]
  tokens      Token[]
}

model UserLogin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  password   String
  userId     String   @unique
  googleId   String?
  appleId    String?
  user       User     @relation(fields: [userId], references: [id])
}

model Chat {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  senderId      String
  receiverId    String
  lastMessageId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sender        User      @relation("SenderChats", fields: [senderId], references: [id])
  receiver      User      @relation("ReceiverChats", fields: [receiverId], references: [id])
  messages      Message[]
  lastMessage   Message?  @relation(fields: [lastMessageId], references: [id])
}

model Message {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  content           String
  senderId          String
  chatId            String
  parentMessageId   String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  chat              Chat      @relation(fields: [chatId], references: [id])
  sender            User      @relation(fields: [senderId], references: [id])
  parentMessage     Message?  @relation("ParentMessage", fields: [parentMessageId], references: [id])
  replies           Message[] @relation("ParentMessage")
}

model File {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  userId        String
  originalName  String
  editedName    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [userId], references: [id])
}

model Token {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  token         String
  usage         String
  userId        String
  createdAt     DateTime  @default(now())
  user          User      @relation(fields: [userId], references: [id])
}

